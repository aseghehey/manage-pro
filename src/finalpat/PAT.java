//Emanuel Aseghehey

/*  
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package finalpat;

import java.awt.Dimension;
import java.util.List;
import java.util.Vector;
import javax.persistence.*;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

/**
 *
 * @author emanuelpackas
 */
public class PAT extends javax.swing.JFrame {

    /**
     * Creates new form PAT
     */
    public PAT() {

        initComponents();

        // This will make pnlMenu the only panel displayed when the program
        //  starts. All other panels will be hidden
        swopPanel(pnlMenu);

        // These 5 methods are called so that some buttons are disabled and that
        // the lists: Goalkeepers, defenders, midfielders and forwards are 
        //updated and set.
        
        DisableButtons();
        LoadintoDefenders();
        LoadintoGoalkeepers();
        LoadintoMidfielders();
        LoadintoForwards();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        FINALPATPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("FINALPATPU").createEntityManager();
        playerQuery = java.beans.Beans.isDesignTime() ? null : FINALPATPUEntityManager.createQuery("SELECT p FROM Player p");
        playerList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : playerQuery.getResultList();
        ppositionQuery = java.beans.Beans.isDesignTime() ? null : FINALPATPUEntityManager.createQuery("SELECT p FROM Pposition p");
        ppositionList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : ppositionQuery.getResultList();
        injuryQuery = java.beans.Beans.isDesignTime() ? null : FINALPATPUEntityManager.createQuery("SELECT i FROM Injury i");
        injuryList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : injuryQuery.getResultList();
        tbpMain = new javax.swing.JTabbedPane();
        pnlMenu = new javax.swing.JPanel();
        btnMMGoSearch = new javax.swing.JButton();
        btnMMCancel = new javax.swing.JButton();
        btnMMhelp = new javax.swing.JButton();
        btnMMGotoplayers = new javax.swing.JButton();
        pnlSearch = new javax.swing.JPanel();
        btnSGoMainMenu = new javax.swing.JButton();
        btnSCancel = new javax.swing.JButton();
        btnSNoInjury = new javax.swing.JButton();
        btnSInjury = new javax.swing.JButton();
        btnSMostGoals = new javax.swing.JButton();
        btnSbyPosition = new javax.swing.JButton();
        btnSHelp = new javax.swing.JButton();
        btnSGoalsNoinjury = new javax.swing.JButton();
        btnSRedCards = new javax.swing.JButton();
        btnSYellowCards = new javax.swing.JButton();
        btnSMostAssists = new javax.swing.JButton();
        btnMostCards = new javax.swing.JButton();
        pnlbyPos = new javax.swing.JPanel();
        btnPgoalkeepers = new javax.swing.JButton();
        btnPdefenders = new javax.swing.JButton();
        btnPmidfielders = new javax.swing.JButton();
        btnPforwards = new javax.swing.JButton();
        btnPgotoMainMenu = new javax.swing.JButton();
        btnPgotoSearch = new javax.swing.JButton();
        btnPCancel = new javax.swing.JButton();
        pnlPlayers = new javax.swing.JPanel();
        btnPlGoMM = new javax.swing.JButton();
        btnPlcancel = new javax.swing.JButton();
        lblPlayersonteam = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstPlayers = new javax.swing.JList<>();
        lblPlayersdetails = new javax.swing.JLabel();
        btnPlayersStats = new javax.swing.JButton();
        lblHeight = new javax.swing.JLabel();
        lblWeight = new javax.swing.JLabel();
        spnHeight = new javax.swing.JSpinner();
        spnWeight = new javax.swing.JSpinner();
        cbxInjuredBefore = new javax.swing.JCheckBox();
        cbPosition = new javax.swing.JComboBox<>();
        lblPos = new javax.swing.JLabel();
        btnPlHelp = new javax.swing.JButton();
        cbInjury = new javax.swing.JComboBox<>();
        lblInjury = new javax.swing.JLabel();
        pnlGoalkeepers = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        btnGKviewinfo = new javax.swing.JButton();
        btnGKgoMM = new javax.swing.JButton();
        btnGKcancel = new javax.swing.JButton();
        btnGKseepos = new javax.swing.JButton();
        cbxGKinjured = new javax.swing.JCheckBox();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstGoalkeepers = new javax.swing.JList(goalkeepers);
        spnGKAppearances = new javax.swing.JSpinner();
        spnGKRed = new javax.swing.JSpinner();
        spnGKYellow = new javax.swing.JSpinner();
        cbxGKupfront = new javax.swing.JCheckBox();
        btnGKInjuryDetails = new javax.swing.JButton();
        pnlDefenders = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnDViewinfo = new javax.swing.JButton();
        btnDcancel = new javax.swing.JButton();
        btnDgoMM = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        btnDseeotherpos = new javax.swing.JButton();
        cbxDinjuredthisseason = new javax.swing.JCheckBox();
        jScrollPane5 = new javax.swing.JScrollPane();
        lstDefenders = new javax.swing.JList(defenders);
        spnDAppearances = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        spnDYellow = new javax.swing.JSpinner();
        spnDGoals = new javax.swing.JSpinner();
        spnDAssists = new javax.swing.JSpinner();
        spnDRed = new javax.swing.JSpinner();
        btnDInjuryDetails = new javax.swing.JButton();
        pnlMidfielders = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        btnMgoMM = new javax.swing.JButton();
        btnMseepos = new javax.swing.JButton();
        btnMcancel = new javax.swing.JButton();
        btnMviewinfo = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstMidfielders = new javax.swing.JList(midfielders);
        spnMAppearances = new javax.swing.JSpinner();
        spnMRed = new javax.swing.JSpinner();
        spnMYellow = new javax.swing.JSpinner();
        spnMGoals = new javax.swing.JSpinner();
        spnMAssists = new javax.swing.JSpinner();
        cbxMInjuredThisSeason = new javax.swing.JCheckBox();
        btnMInjuryDetails = new javax.swing.JButton();
        pnlForwards = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        btnFviewinfo = new javax.swing.JButton();
        btnFgoMM = new javax.swing.JButton();
        btnFcancel = new javax.swing.JButton();
        btnFseepos = new javax.swing.JButton();
        cbxFinjuredthisseason = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstForwards = new javax.swing.JList(forwards);
        spnFAppearances = new javax.swing.JSpinner();
        spnFRed = new javax.swing.JSpinner();
        spnFYellow = new javax.swing.JSpinner();
        spnFGoals = new javax.swing.JSpinner();
        spnFAssists = new javax.swing.JSpinner();
        btnFInjuryDetails = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnMMGoSearch.setText("Search");
        btnMMGoSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMMGoSearchActionPerformed(evt);
            }
        });

        btnMMCancel.setText("Cancel");
        btnMMCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMMCancelActionPerformed(evt);
            }
        });

        btnMMhelp.setText("?");
        btnMMhelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMMhelpActionPerformed(evt);
            }
        });

        btnMMGotoplayers.setText("Go to player's list");
        btnMMGotoplayers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMMGotoplayersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMenuLayout = new javax.swing.GroupLayout(pnlMenu);
        pnlMenu.setLayout(pnlMenuLayout);
        pnlMenuLayout.setHorizontalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMMCancel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMenuLayout.createSequentialGroup()
                        .addGap(0, 569, Short.MAX_VALUE)
                        .addComponent(btnMMhelp, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnMMGoSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMMGotoplayers, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlMenuLayout.setVerticalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(btnMMhelp)
                .addGap(18, 18, 18)
                .addComponent(btnMMGoSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnMMGotoplayers, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(btnMMCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        tbpMain.addTab("Main Menu", pnlMenu);

        btnSGoMainMenu.setText("<< Back to Main Menu");
        btnSGoMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSGoMainMenuActionPerformed(evt);
            }
        });

        btnSCancel.setText("Cancel");
        btnSCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSCancelActionPerformed(evt);
            }
        });

        btnSNoInjury.setText("Players that havent been injured ");
        btnSNoInjury.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSNoInjuryActionPerformed(evt);
            }
        });

        btnSInjury.setText("Players that been injured");
        btnSInjury.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSInjuryActionPerformed(evt);
            }
        });

        btnSMostGoals.setText("Players with the most goals");
        btnSMostGoals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSMostGoalsActionPerformed(evt);
            }
        });

        btnSbyPosition.setText("Search or sort players by position");
        btnSbyPosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSbyPositionActionPerformed(evt);
            }
        });

        btnSHelp.setText("?");
        btnSHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSHelpActionPerformed(evt);
            }
        });

        btnSGoalsNoinjury.setText("Players with most goals and no injury");
        btnSGoalsNoinjury.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSGoalsNoinjuryActionPerformed(evt);
            }
        });

        btnSRedCards.setText("Players with red cards");
        btnSRedCards.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSRedCardsActionPerformed(evt);
            }
        });

        btnSYellowCards.setText("Players with yellow cards");
        btnSYellowCards.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSYellowCardsActionPerformed(evt);
            }
        });

        btnSMostAssists.setText("Players with most assists");
        btnSMostAssists.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSMostAssistsActionPerformed(evt);
            }
        });

        btnMostCards.setText("Players with most yellow and red cards");
        btnMostCards.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostCardsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSearchLayout = new javax.swing.GroupLayout(pnlSearch);
        pnlSearch.setLayout(pnlSearchLayout);
        pnlSearchLayout.setHorizontalGroup(
            pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchLayout.createSequentialGroup()
                .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSearchLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSbyPosition, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlSearchLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlSearchLayout.createSequentialGroup()
                                .addComponent(btnSGoMainMenu)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(btnSMostGoals, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSInjury, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSRedCards, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSGoalsNoinjury, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSNoInjury, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSYellowCards, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSMostAssists, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnlSearchLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(btnMostCards, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        pnlSearchLayout.setVerticalGroup(
            pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(btnSNoInjury, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSInjury, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSMostGoals, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSMostAssists, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSGoalsNoinjury, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSRedCards, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSYellowCards, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMostCards, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSbyPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSGoMainMenu)
                    .addComponent(btnSCancel)))
        );

        tbpMain.addTab("Search", pnlSearch);

        btnPgoalkeepers.setText("GOALKEEPERS");
        btnPgoalkeepers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPgoalkeepersActionPerformed(evt);
            }
        });

        btnPdefenders.setText("DEFENDERS");
        btnPdefenders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPdefendersActionPerformed(evt);
            }
        });

        btnPmidfielders.setText("MIDFIELDERS");
        btnPmidfielders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPmidfieldersActionPerformed(evt);
            }
        });

        btnPforwards.setText("FORWARDS");
        btnPforwards.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPforwardsActionPerformed(evt);
            }
        });

        btnPgotoMainMenu.setText("<< Back to Main menu");
        btnPgotoMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPgotoMainMenuActionPerformed(evt);
            }
        });

        btnPgotoSearch.setText("< Back to search page");
        btnPgotoSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPgotoSearchActionPerformed(evt);
            }
        });

        btnPCancel.setText("Cancel");
        btnPCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlbyPosLayout = new javax.swing.GroupLayout(pnlbyPos);
        pnlbyPos.setLayout(pnlbyPosLayout);
        pnlbyPosLayout.setHorizontalGroup(
            pnlbyPosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlbyPosLayout.createSequentialGroup()
                .addGroup(pnlbyPosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlbyPosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnPgoalkeepers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnPmidfielders, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPforwards, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPdefenders, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlbyPosLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(pnlbyPosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnPCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPgotoMainMenu, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                        .addComponent(btnPgotoSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlbyPosLayout.setVerticalGroup(
            pnlbyPosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlbyPosLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(btnPgoalkeepers, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(btnPdefenders, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(btnPmidfielders, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(btnPforwards, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlbyPosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlbyPosLayout.createSequentialGroup()
                        .addComponent(btnPgotoMainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnPgotoSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbpMain.addTab("S by Pos", pnlbyPos);

        btnPlGoMM.setText("<< Back to Main Menu");
        btnPlGoMM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlGoMMActionPerformed(evt);
            }
        });

        btnPlcancel.setText("Cancel");
        btnPlcancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlcancelActionPerformed(evt);
            }
        });

        lblPlayersonteam.setText("Players on the team");

        org.jdesktop.swingbinding.JListBinding jListBinding = org.jdesktop.swingbinding.SwingBindings.createJListBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, playerList, lstPlayers);
        bindingGroup.addBinding(jListBinding);

        lstPlayers.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstPlayersValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstPlayers);

        lblPlayersdetails.setText("----- Players details-----");

        btnPlayersStats.setText("View player's stats");
        btnPlayersStats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayersStatsActionPerformed(evt);
            }
        });

        lblHeight.setText("Height (in cm):");

        lblWeight.setText("Weight (in kgs):");

        spnHeight.setModel(new javax.swing.SpinnerNumberModel(0.0d, null, null, 1.0d));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, lstPlayers, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.pheight}"), spnHeight, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        spnWeight.setModel(new javax.swing.SpinnerNumberModel(0.0d, null, null, 1.0d));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, lstPlayers, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.pweight}"), spnWeight, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        cbxInjuredBefore.setText("Has player been injured?");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, lstPlayers, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.pinjuredbefore}"), cbxInjuredBefore, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, ppositionList, cbPosition);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, lstPlayers, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.pposition}"), cbPosition, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        lblPos.setText("Position:");

        btnPlHelp.setText("?");
        btnPlHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlHelpActionPerformed(evt);
            }
        });

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, injuryList, cbInjury);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, lstPlayers, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.injury}"), cbInjury, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        lblInjury.setText("Injury:");

        javax.swing.GroupLayout pnlPlayersLayout = new javax.swing.GroupLayout(pnlPlayers);
        pnlPlayers.setLayout(pnlPlayersLayout);
        pnlPlayersLayout.setHorizontalGroup(
            pnlPlayersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPlayersLayout.createSequentialGroup()
                .addGroup(pnlPlayersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPlayersLayout.createSequentialGroup()
                        .addComponent(btnPlGoMM)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPlcancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlPlayersLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlPlayersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlPlayersLayout.createSequentialGroup()
                                .addComponent(lblPlayersonteam)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnPlHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlPlayersLayout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
                                .addGroup(pnlPlayersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlPlayersLayout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addGroup(pnlPlayersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lblPos)
                                            .addComponent(cbxInjuredBefore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblPlayersdetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblWeight)
                                            .addComponent(lblHeight)
                                            .addComponent(spnHeight)
                                            .addComponent(spnWeight)
                                            .addComponent(cbPosition, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cbInjury, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(pnlPlayersLayout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addComponent(lblInjury))
                                    .addGroup(pnlPlayersLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(btnPlayersStats, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap())
        );
        pnlPlayersLayout.setVerticalGroup(
            pnlPlayersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPlayersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPlayersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPlayersonteam)
                    .addComponent(btnPlHelp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPlayersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(pnlPlayersLayout.createSequentialGroup()
                        .addComponent(lblPlayersdetails)
                        .addGap(23, 23, 23)
                        .addComponent(lblHeight)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spnHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(lblWeight)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spnWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblPos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(cbxInjuredBefore)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblInjury)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbInjury, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btnPlayersStats, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 8, Short.MAX_VALUE)))
                .addGap(41, 41, 41)
                .addGroup(pnlPlayersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPlGoMM)
                    .addComponent(btnPlcancel)))
        );

        tbpMain.addTab("Players", pnlPlayers);

        jLabel12.setText("Goal-keepers:");

        jLabel13.setText("Appearances");

        jLabel15.setText("Red:");

        jLabel16.setText("Yellow:");

        btnGKviewinfo.setText("View player's info");
        btnGKviewinfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGKviewinfoActionPerformed(evt);
            }
        });

        btnGKgoMM.setText("<< Back to Main menu");
        btnGKgoMM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGKgoMMActionPerformed(evt);
            }
        });

        btnGKcancel.setText("Cancel");
        btnGKcancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGKcancelActionPerformed(evt);
            }
        });

        btnGKseepos.setText("See other positions");
        btnGKseepos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGKseeposActionPerformed(evt);
            }
        });

        cbxGKinjured.setText("Injured this season?");

        lstGoalkeepers.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstGoalkeepersValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(lstGoalkeepers);

        cbxGKupfront.setText("Plays Upfront?");

        btnGKInjuryDetails.setText("Injury details");
        btnGKInjuryDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGKInjuryDetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlGoalkeepersLayout = new javax.swing.GroupLayout(pnlGoalkeepers);
        pnlGoalkeepers.setLayout(pnlGoalkeepersLayout);
        pnlGoalkeepersLayout.setHorizontalGroup(
            pnlGoalkeepersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGoalkeepersLayout.createSequentialGroup()
                .addComponent(jLabel12)
                .addGap(36, 36, 36))
            .addGroup(pnlGoalkeepersLayout.createSequentialGroup()
                .addGap(430, 430, 430)
                .addComponent(spnGKAppearances, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 111, Short.MAX_VALUE))
            .addGroup(pnlGoalkeepersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGoalkeepersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlGoalkeepersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnGKgoMM, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGKseepos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlGoalkeepersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGoalkeepersLayout.createSequentialGroup()
                        .addGroup(pnlGoalkeepersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(cbxGKinjured)
                            .addGroup(pnlGoalkeepersLayout.createSequentialGroup()
                                .addGroup(pnlGoalkeepersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel16))
                                .addGap(60, 60, 60)
                                .addGroup(pnlGoalkeepersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(spnGKRed, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                                    .addComponent(spnGKYellow))))
                        .addGap(0, 111, Short.MAX_VALUE))
                    .addGroup(pnlGoalkeepersLayout.createSequentialGroup()
                        .addGroup(pnlGoalkeepersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGKviewinfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGKcancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnlGoalkeepersLayout.createSequentialGroup()
                                .addGroup(pnlGoalkeepersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbxGKupfront, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnGKInjuryDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        pnlGoalkeepersLayout.setVerticalGroup(
            pnlGoalkeepersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGoalkeepersLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlGoalkeepersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGoalkeepersLayout.createSequentialGroup()
                        .addGroup(pnlGoalkeepersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(spnGKAppearances, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(cbxGKinjured)
                        .addGap(18, 18, 18)
                        .addGroup(pnlGoalkeepersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(spnGKRed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlGoalkeepersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(spnGKYellow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(cbxGKupfront)
                        .addGap(18, 18, 18)
                        .addComponent(btnGKInjuryDetails))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(pnlGoalkeepersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnGKgoMM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGKviewinfo, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(pnlGoalkeepersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGKseepos, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGKcancel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46))
        );

        tbpMain.addTab("Goalkeepers", pnlGoalkeepers);

        jLabel6.setText("Appearances:");

        jLabel8.setText("Red cards:");

        jLabel9.setText("Yellow cards:");

        btnDViewinfo.setText("View Player's info");
        btnDViewinfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDViewinfoActionPerformed(evt);
            }
        });

        btnDcancel.setText("Cancel");
        btnDcancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDcancelActionPerformed(evt);
            }
        });

        btnDgoMM.setText("<< Back to Main menu");
        btnDgoMM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDgoMMActionPerformed(evt);
            }
        });

        jLabel10.setText("Defenders:");

        jLabel24.setText("Goals:");

        btnDseeotherpos.setText("See other positions");
        btnDseeotherpos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDseeotherposActionPerformed(evt);
            }
        });

        cbxDinjuredthisseason.setText("Injured this season?");

        lstDefenders.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstDefendersValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(lstDefenders);

        spnDAppearances.setModel(new javax.swing.SpinnerNumberModel());

        jLabel1.setText("Assists:");

        btnDInjuryDetails.setText("Injury details");
        btnDInjuryDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDInjuryDetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDefendersLayout = new javax.swing.GroupLayout(pnlDefenders);
        pnlDefenders.setLayout(pnlDefendersLayout);
        pnlDefendersLayout.setHorizontalGroup(
            pnlDefendersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDefendersLayout.createSequentialGroup()
                .addGroup(pnlDefendersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlDefendersLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlDefendersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDgoMM, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                            .addComponent(btnDseeotherpos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(45, 45, 45)
                        .addGroup(pnlDefendersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnDcancel, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDViewinfo, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlDefendersLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(pnlDefendersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDefendersLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(pnlDefendersLayout.createSequentialGroup()
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlDefendersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDefendersLayout.createSequentialGroup()
                                        .addGroup(pnlDefendersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDefendersLayout.createSequentialGroup()
                                                .addGroup(pnlDefendersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel24)
                                                    .addComponent(jLabel1))
                                                .addGap(46, 46, 46)
                                                .addGroup(pnlDefendersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(spnDGoals)
                                                    .addComponent(spnDAssists)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDefendersLayout.createSequentialGroup()
                                                .addGroup(pnlDefendersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel6)
                                                    .addComponent(jLabel8)
                                                    .addComponent(jLabel9))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(pnlDefendersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(spnDYellow)
                                                    .addComponent(spnDRed)
                                                    .addGroup(pnlDefendersLayout.createSequentialGroup()
                                                        .addGap(0, 0, Short.MAX_VALUE)
                                                        .addComponent(spnDAppearances, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                        .addGap(92, 92, 92))
                                    .addGroup(pnlDefendersLayout.createSequentialGroup()
                                        .addComponent(cbxDinjuredthisseason)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(btnDInjuryDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addGap(20, 20, 20))
        );
        pnlDefendersLayout.setVerticalGroup(
            pnlDefendersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDefendersLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel10)
                .addGroup(pnlDefendersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDefendersLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(pnlDefendersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(spnDAppearances, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addGroup(pnlDefendersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(spnDRed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(pnlDefendersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(spnDYellow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxDinjuredthisseason)
                        .addGap(18, 18, 18)
                        .addGroup(pnlDefendersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlDefendersLayout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlDefendersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(spnDAssists, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnlDefendersLayout.createSequentialGroup()
                                .addComponent(spnDGoals, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)))
                        .addComponent(btnDInjuryDetails)
                        .addGap(71, 71, 71))
                    .addGroup(pnlDefendersLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane5)))
                .addGap(23, 23, 23)
                .addGroup(pnlDefendersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDgoMM, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDViewinfo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlDefendersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDcancel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDseeotherpos, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        tbpMain.addTab("Defenders", pnlDefenders);

        jLabel25.setText("Midfielders:");

        jLabel26.setText("Appearances:");

        jLabel28.setText("Red:");

        jLabel29.setText("Yellow:");

        jLabel31.setText("Goals:");

        jLabel32.setText("Assists:");

        btnMgoMM.setText("<< Back to Main menu");
        btnMgoMM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMgoMMActionPerformed(evt);
            }
        });

        btnMseepos.setText("See other positions");
        btnMseepos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMseeposActionPerformed(evt);
            }
        });

        btnMcancel.setText("Cancel");
        btnMcancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMcancelActionPerformed(evt);
            }
        });

        btnMviewinfo.setText("View player's info");
        btnMviewinfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMviewinfoActionPerformed(evt);
            }
        });

        lstMidfielders.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstMidfieldersValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lstMidfielders);

        cbxMInjuredThisSeason.setText("Injured this season? ");

        btnMInjuryDetails.setText("Injury details");
        btnMInjuryDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMInjuryDetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMidfieldersLayout = new javax.swing.GroupLayout(pnlMidfielders);
        pnlMidfielders.setLayout(pnlMidfieldersLayout);
        pnlMidfieldersLayout.setHorizontalGroup(
            pnlMidfieldersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMidfieldersLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(pnlMidfieldersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMidfieldersLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addGroup(pnlMidfieldersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMidfieldersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(pnlMidfieldersLayout.createSequentialGroup()
                                    .addComponent(jLabel31)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(spnMGoals, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMidfieldersLayout.createSequentialGroup()
                                    .addComponent(jLabel32)
                                    .addGap(66, 66, 66)
                                    .addComponent(spnMAssists))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMidfieldersLayout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addComponent(btnMInjuryDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(cbxMInjuredThisSeason)
                            .addGroup(pnlMidfieldersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(pnlMidfieldersLayout.createSequentialGroup()
                                    .addComponent(jLabel29)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(spnMYellow, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlMidfieldersLayout.createSequentialGroup()
                                    .addGroup(pnlMidfieldersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel28)
                                        .addComponent(jLabel26))
                                    .addGap(18, 18, 18)
                                    .addGroup(pnlMidfieldersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(spnMAppearances, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(spnMRed, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(34, 34, 34))
                    .addGroup(pnlMidfieldersLayout.createSequentialGroup()
                        .addGroup(pnlMidfieldersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnMgoMM, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnMseepos, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlMidfieldersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnMcancel, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                            .addComponent(btnMviewinfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(pnlMidfieldersLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel25)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlMidfieldersLayout.setVerticalGroup(
            pnlMidfieldersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMidfieldersLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel25)
                .addGap(18, 18, 18)
                .addGroup(pnlMidfieldersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMidfieldersLayout.createSequentialGroup()
                        .addGroup(pnlMidfieldersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(spnMAppearances, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(pnlMidfieldersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28)
                            .addComponent(spnMRed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlMidfieldersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(spnMYellow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addComponent(cbxMInjuredThisSeason)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlMidfieldersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31)
                            .addComponent(spnMGoals, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlMidfieldersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel32)
                            .addComponent(spnMAssists, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnMInjuryDetails))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlMidfieldersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnMviewinfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMgoMM, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlMidfieldersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMcancel, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMseepos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbpMain.addTab("Midfielders", pnlMidfielders);

        jLabel17.setText("Forwards:");

        jLabel18.setText("Appearances:");

        jLabel20.setText("Red:");

        jLabel21.setText("Yellow:");

        jLabel22.setText("Goals:");

        jLabel23.setText("Assists:");

        btnFviewinfo.setText("View player's info");
        btnFviewinfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFviewinfoActionPerformed(evt);
            }
        });

        btnFgoMM.setText("<< Back to Main menu");
        btnFgoMM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFgoMMActionPerformed(evt);
            }
        });

        btnFcancel.setText("Cancel");
        btnFcancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFcancelActionPerformed(evt);
            }
        });

        btnFseepos.setText("See other positions");
        btnFseepos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFseeposActionPerformed(evt);
            }
        });

        cbxFinjuredthisseason.setText("Injured this season?");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, lstForwards, org.jdesktop.beansbinding.ELProperty.create("${selectedValue.pinjuredbefore}"), cbxFinjuredthisseason, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        lstForwards.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstForwardsValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(lstForwards);

        btnFInjuryDetails.setText("Injury details");
        btnFInjuryDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFInjuryDetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlForwardsLayout = new javax.swing.GroupLayout(pnlForwards);
        pnlForwards.setLayout(pnlForwardsLayout);
        pnlForwardsLayout.setHorizontalGroup(
            pnlForwardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlForwardsLayout.createSequentialGroup()
                .addGroup(pnlForwardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlForwardsLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel17))
                    .addGroup(pnlForwardsLayout.createSequentialGroup()
                        .addGap(360, 360, 360)
                        .addGroup(pnlForwardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlForwardsLayout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addGap(51, 51, 51)
                                .addComponent(spnFAssists))
                            .addGroup(pnlForwardsLayout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addGap(62, 62, 62)
                                .addComponent(spnFGoals))
                            .addGroup(pnlForwardsLayout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addGap(56, 56, 56)
                                .addComponent(spnFYellow))
                            .addGroup(pnlForwardsLayout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addGap(74, 74, 74)
                                .addComponent(spnFRed))
                            .addGroup(pnlForwardsLayout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(spnFAppearances, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnFInjuryDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(89, 89, Short.MAX_VALUE))
            .addGroup(pnlForwardsLayout.createSequentialGroup()
                .addGroup(pnlForwardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlForwardsLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(pnlForwardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnFseepos, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnFgoMM, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(pnlForwardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlForwardsLayout.createSequentialGroup()
                        .addGroup(pnlForwardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlForwardsLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(cbxFinjuredthisseason))
                            .addGroup(pnlForwardsLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnFcancel, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 59, Short.MAX_VALUE))
                    .addGroup(pnlForwardsLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnFviewinfo, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnlForwardsLayout.setVerticalGroup(
            pnlForwardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlForwardsLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel17)
                .addGroup(pnlForwardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlForwardsLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlForwardsLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(pnlForwardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(spnFAppearances, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addComponent(cbxFinjuredthisseason)
                        .addGap(21, 21, 21)
                        .addGroup(pnlForwardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(spnFRed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlForwardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(spnFYellow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlForwardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(spnFGoals, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlForwardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(spnFAssists, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addComponent(btnFInjuryDetails)))
                .addGap(18, 18, 18)
                .addGroup(pnlForwardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnFviewinfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnFgoMM, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlForwardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFcancel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFseepos, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        tbpMain.addTab("Forwards", pnlForwards);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tbpMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tbpMain, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMMCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMMCancelActionPerformed
        cancel();
    }//GEN-LAST:event_btnMMCancelActionPerformed

    private void btnMMGoSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMMGoSearchActionPerformed
        swopPanel(pnlSearch);
    }//GEN-LAST:event_btnMMGoSearchActionPerformed

    private void btnSGoMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSGoMainMenuActionPerformed
        swopPanel(pnlMenu);
    }//GEN-LAST:event_btnSGoMainMenuActionPerformed

    private void btnSCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSCancelActionPerformed
        cancel();
    }//GEN-LAST:event_btnSCancelActionPerformed

    private void btnPlGoMMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlGoMMActionPerformed
        swopPanel(pnlMenu);
    }//GEN-LAST:event_btnPlGoMMActionPerformed

    private void btnPlcancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlcancelActionPerformed
        cancel();
    }//GEN-LAST:event_btnPlcancelActionPerformed

    private void btnSbyPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSbyPositionActionPerformed
        swopPanel(pnlbyPos);
    }//GEN-LAST:event_btnSbyPositionActionPerformed

    private void btnPgoalkeepersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPgoalkeepersActionPerformed
        swopPanel(pnlGoalkeepers);
    }//GEN-LAST:event_btnPgoalkeepersActionPerformed

    private void btnPdefendersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPdefendersActionPerformed
        swopPanel(pnlDefenders);

    }//GEN-LAST:event_btnPdefendersActionPerformed

    private void btnDcancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDcancelActionPerformed
        cancel();
    }//GEN-LAST:event_btnDcancelActionPerformed

    private void btnDgoMMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDgoMMActionPerformed
        swopPanel(pnlMenu);
    }//GEN-LAST:event_btnDgoMMActionPerformed

    private void btnPmidfieldersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPmidfieldersActionPerformed
        swopPanel(pnlMidfielders);
    }//GEN-LAST:event_btnPmidfieldersActionPerformed

    private void btnPforwardsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPforwardsActionPerformed
        swopPanel(pnlForwards);
    }//GEN-LAST:event_btnPforwardsActionPerformed

    private void btnGKgoMMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGKgoMMActionPerformed
        swopPanel(pnlMenu);
    }//GEN-LAST:event_btnGKgoMMActionPerformed

    private void btnGKseeposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGKseeposActionPerformed
        swopPanel(pnlbyPos);
    }//GEN-LAST:event_btnGKseeposActionPerformed

    private void btnGKcancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGKcancelActionPerformed
        cancel();
    }//GEN-LAST:event_btnGKcancelActionPerformed

    private void btnFgoMMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFgoMMActionPerformed
        swopPanel(pnlMenu);
    }//GEN-LAST:event_btnFgoMMActionPerformed

    private void btnFseeposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFseeposActionPerformed
        swopPanel(pnlbyPos);
    }//GEN-LAST:event_btnFseeposActionPerformed

    private void btnFcancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFcancelActionPerformed
        cancel();
    }//GEN-LAST:event_btnFcancelActionPerformed

    private void btnMgoMMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMgoMMActionPerformed
        swopPanel(pnlMenu);
    }//GEN-LAST:event_btnMgoMMActionPerformed

    private void btnMseeposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMseeposActionPerformed
        swopPanel(pnlbyPos);
    }//GEN-LAST:event_btnMseeposActionPerformed

    private void btnMcancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMcancelActionPerformed
        cancel();
    }//GEN-LAST:event_btnMcancelActionPerformed

    private void btnDseeotherposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDseeotherposActionPerformed
        swopPanel(pnlbyPos);
    }//GEN-LAST:event_btnDseeotherposActionPerformed

    private void btnPgotoMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPgotoMainMenuActionPerformed
        swopPanel(pnlMenu);
    }//GEN-LAST:event_btnPgotoMainMenuActionPerformed

    private void btnPCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPCancelActionPerformed
        cancel();
    }//GEN-LAST:event_btnPCancelActionPerformed

    private void btnPgotoSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPgotoSearchActionPerformed
        swopPanel(pnlSearch);
    }//GEN-LAST:event_btnPgotoSearchActionPerformed

    private void btnMMhelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMMhelpActionPerformed

        // Whenever the user clicks on this help button the message with 
        //instructions and information (on the toDisplay string) 
        // will pop up and the it is JOptionPane.YES_NO_OPTION so if the user 
        //is happy with the information he/she
        // can click on "OK" when the user is done
        
        
        //the name of the variable is "to display" because it is information
        //that will be displayed.
        String toDisplay = "1. You can click on the search button to search "
                + "for "
                + "a player, to see who’s been injured and who hasn’t, to see "
                + "wh"
                + "o has the most goals or to search and sort players "
                + "according "
                + "to their position.\n"
                + "2. If you want to see and know the players that are "
                + "on your t"
                + "eam then the button “Go to player’s list” is available "
                + "so you"
                + " can do that. It’ll take you to a page with all the "
                + "player’s "
                + "details and stats.\n"
                + "3. If you want to see the player’s who have already "
                + "been sele"
                + "cted for the starting line-up, then the button “See "
                + "Squad lis"
                + "t” is available to aid you with that.\n"
                + "4. If you want to close the program, then the button "
                + "“cancel”"
                + " is available to aid you with that. \n" + "\n5. To "
                + "check out "
                + "the players grouped in their positions then do the "
                + "following:"
                + "\n"
                + "Click on Search >> “Search or sort players by position” >> "
                + "ch" + "oose any position ";

        JTextArea textArea = new JTextArea(toDisplay);
        JScrollPane scrollPane = new JScrollPane(textArea);
        textArea.setLineWrap(true);
        textArea.setWrapStyleWord(true);
        scrollPane.setPreferredSize(new Dimension(450, 450));
        JOptionPane.showMessageDialog(this, scrollPane, "Help", JOptionPane.
                YES_NO_OPTION);

    }//GEN-LAST:event_btnMMhelpActionPerformed

    private void btnPlHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlHelpActionPerformed

        // Whenever the user clicks on this help button the message with  
        //instructions and information (on the toDisplay string) 
        // will pop up and the it is JOptionPane.YES_NO_OPTION so if the user is
        //happy with the information he/she can click on "OK" when the user 
        //is done
        
        //the name of the variable is "to display" because it is information
        //that will be displayed.
        String toDisplay = "1. If you wish to see a player’s stats "
                + "(goals, appearances, injury, cards and assists) you have to "
                + "select a player from the list, then the button "
                + "“View Player’s"
                + " stats” will help you with that. A message with their stats "
                + "will pop up.\n"
                + "2. If the box is ticked then the player has been injured "
                + "before. \n 3. If you wish to see players grouped in their po"
                + "sitions then go back to main menu>>Search>>by position>>choo"
                + "se any position";

        JTextArea textArea = new JTextArea(toDisplay);
        JScrollPane scrollPane = new JScrollPane(textArea);
        textArea.setLineWrap(true);
        textArea.setWrapStyleWord(true);
        scrollPane.setPreferredSize(new Dimension(300, 300));
        JOptionPane.showMessageDialog(this, scrollPane, "Help", JOptionPane
                .YES_NO_OPTION);
    }//GEN-LAST:event_btnPlHelpActionPerformed

    private void btnSNoInjuryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSNoInjuryActionPerformed

        //On this, I used SQL code and implemented it on Entity Manager. 
        //It'll get the details from players who have never
        // been injured.
        Query q = FINALPATPUEntityManager.createNativeQuery("SELECT * FROM "
                + "PLAYE"
                + "R WHERE PLAYER.INJURYID = 11" + "");

        List<Object[]> objlist = q.getResultList();
        //This is a list variable which gets the results from the SQL statements

        String toDisplay = ""; 
        //this is the String which will display the information gotten from the 
        //SQL to the user
        //the name of the variable is "to display" because it is information
        //that will be displayed.

        for (Object[] row : objlist) {

            toDisplay = toDisplay + "" + row[1] + " " + row[2] + "\n";

            //TESTING:
            //System.out.println(row[0] + ", commonality: " + row[1]);
        }

        // I used JOptionPane.YES_NO_OPTION so if the user is happy with the 
        //information he/she can click on "OK" when the user is done
        
        JTextArea textArea = new JTextArea(toDisplay);
        JScrollPane scrollPane = new JScrollPane(textArea);
        textArea.setLineWrap(true);
        textArea.setWrapStyleWord(true);
        scrollPane.setPreferredSize(new Dimension(300, 300));
        JOptionPane.showMessageDialog(this, 
                scrollPane, 
                "Players who haven't been injured", 
                JOptionPane.YES_NO_OPTION);
    }//GEN-LAST:event_btnSNoInjuryActionPerformed

    private void btnSMostGoalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSMostGoalsActionPerformed
        //SELECT PNAME, PSURNAME, PGOALS FROM PLAYER WHERE PLAYER.PGOALS > 0 
        //ORDER BY PGOALS DESC

        // As I have previously done and mentioned: I integrated SQL statements 
        //by means of an Entity Manager
        // The SQL statement gets the names of players and their goals. However,
        //it only gets the players who have at least scored a goal
        // and it orders them descendently
        Query q = FINALPATPUEntityManager.createNativeQuery("SELECT PNAME, "
                + "PSURN"
                + "AME, PGOALS FROM PLAYER WHERE PLAYER.PGOALS > 0 "
                + "ORDER BY PGOA"
                + "LS DESC"
                + "");
        //the name of the variable is "to display" because it is information
        //that will be displayed.
        String toDisplay = "";
        List<Object[]> objlist = q.getResultList();

        for (Object[] row : objlist) {

            toDisplay = toDisplay + "" + row[0] + " " + row[1] + " : " + row[2] 
                    + " goal(s) " + "\n";

            //TESTING:
            //System.out.println(row[0] + ", commonality: " + row[1]);
        }

        //I used JOptionPane.YES_NO_OPTION so if the user is happy with the info
        //rmation he/she can click on "OK" when the user is done
        JTextArea textArea = new JTextArea(toDisplay);
        JScrollPane scrollPane = new JScrollPane(textArea);
        textArea.setLineWrap(true);
        textArea.setWrapStyleWord(true);
        scrollPane.setPreferredSize(new Dimension(300, 300));
        JOptionPane.showMessageDialog(this,
                scrollPane, "Top goal scorers", JOptionPane.YES_NO_OPTION);
    }//GEN-LAST:event_btnSMostGoalsActionPerformed

    private void btnSInjuryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSInjuryActionPerformed

        // As I have previously done and mentioned: I integrated SQL statements 
        //by means of an Entity Manager
        // The SQL statement gets the names of players and their injuries 
        //details. However, it only gets the players who have an injury id 
        //which is 11 - which means "none" - no injury.
        
        Query q = FINALPATPUEntityManager.createNativeQuery
        ("SELECT PNAME, PSURNAME, INJURY.INAME FROM PLAYER, INJURY "
                + "WHERE PLAYER.INJURYID < 11 AND PLAYER.INJURYID = I"
                + "NJURY.INJURYID"
                + "");
        
        //the name of the variable is "to display" because it is information
        //that will be displayed.
        String toDisplay = "";
        List<Object[]> objlist = q.getResultList();

        for (Object[] row : objlist) {
            toDisplay = "" + row[0] + " " + row[1] + " : " + row[2] + ""
                    + "\n" + toDisplay;

            //TESTING:
            //System.out.println(row[0] + ", commonality: " + row[1]);
        }

        JTextArea textArea = new JTextArea(toDisplay);
        JScrollPane scrollPane = new JScrollPane(textArea);
        textArea.setLineWrap(true);
        textArea.setWrapStyleWord(true);
        scrollPane.setPreferredSize(new Dimension(300, 300));
        JOptionPane.showMessageDialog(this, 
                scrollPane, "Players who have been injured",
                JOptionPane.YES_NO_OPTION);

    }//GEN-LAST:event_btnSInjuryActionPerformed

    private void btnSGoalsNoinjuryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSGoalsNoinjuryActionPerformed

        // As I have previously done and mentioned: I integrated SQL statements 
        //by means of an Entity Manager
        // The SQL statement gets the names of players and their goals if they 
        //have never been injured . However, it only gets the players who have 
        //at least scored a goal
        // and it orders them descendently. And it gets players who have an 
        //injury ID of 11 - which means that have never been injured.
        
        Query q = FINALPATPUEntityManager.createNativeQuery
        ("SELECT PNAME, PSURNAME, PGOALS, PASSISTS FROM PLAYER WHERE "
                + "PLAYER.PGOALS > 0 AND PLAYER.INJURYID = 11 "
                + "ORDER BY PGOALS DESC"
                + "");
        
        //the name of the variable is "to display" because it is information
        //that will be displayed.
        String toDisplay = "";
        List<Object[]> objlist = q.getResultList();

        for (Object[] row : objlist) {

            toDisplay = toDisplay + "" + 
                    row[0] + " " + row[1] + " : " + row[2] + " goals" + "\n";

            //TESTING:
            //System.out.println(row[0] + ", commonality: " + row[1]);
        }

        JTextArea textArea = new JTextArea(toDisplay);
        JScrollPane scrollPane = new JScrollPane(textArea);
        textArea.setLineWrap(true);
        textArea.setWrapStyleWord(true);
        scrollPane.setPreferredSize(new Dimension(300, 300));
        JOptionPane.showMessageDialog(this, 
                scrollPane, "Goalscorers with no injury", 
                JOptionPane.YES_NO_OPTION);


    }//GEN-LAST:event_btnSGoalsNoinjuryActionPerformed

    private void btnSMostAssistsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSMostAssistsActionPerformed

        // Reads information from the database. Gets the name and surname 
        // of players that have assists. It orders from player with most to the
        // one with the least assists.
        
        Query q = FINALPATPUEntityManager.createNativeQuery
        (" SELECT PNAME, PSURNAME, PASSISTS FROM PLAYER WHERE PASSISTS > 0 "
                + "ORDER BY PASSISTS DESC"
                + "");
        
        //the name of the variable is "to display" because it is information
        //that will be displayed.
        String toDisplay = "";
        List<Object[]> objlist = q.getResultList();

        for (Object[] row : objlist) {

            
            toDisplay = toDisplay + "" + row[0] + " " + row[1] + " : " + 
                    row[2] + " assists" + "\n";
            
            //test:
            //System.out.println(row[0] + ", commonality: " + row[1]);
        }

        JTextArea textArea = new JTextArea(toDisplay);
        JScrollPane scrollPane = new JScrollPane(textArea);
        textArea.setLineWrap(true);
        textArea.setWrapStyleWord(true);
        scrollPane.setPreferredSize(new Dimension(300, 300));
        JOptionPane.showMessageDialog(this, 
                scrollPane, "Players with most assists",
                JOptionPane.YES_NO_OPTION);

    }//GEN-LAST:event_btnSMostAssistsActionPerformed

    private void btnSRedCardsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSRedCardsActionPerformed
        
        // Reads information from the database. Gets the name and surname 
        // of players that have gotten red cards. 
        //It orders from player with most to the to the ones with the least.
        
        Query q = FINALPATPUEntityManager.createNativeQuery
        ("SELECT PNAME, PSURNAME, PRED FROM PLAYER WHERE PRED > 0 "
                + "ORDER BY PRED DESC"
                + "");
        
        //the name of the variable is "to display" because it is information
        //that will be displayed.
        String toDisplay = "";
        List<Object[]> objlist = q.getResultList();

        for (Object[] row : objlist) {

            toDisplay = 
                    toDisplay + "" + row[0] + " " + row[1] + " : " + row[2] 
                    + " red cards" + "\n";
            
            //testing:
            //System.out.println(row[0] + ", commonality: " + row[1]);
        }

        JTextArea textArea = new JTextArea(toDisplay);
        JScrollPane scrollPane = new JScrollPane(textArea);
        textArea.setLineWrap(true);
        textArea.setWrapStyleWord(true);
        scrollPane.setPreferredSize(new Dimension(300, 300));
        JOptionPane.showMessageDialog(this, 
                scrollPane, "Players with most red cards", 
                JOptionPane.YES_NO_OPTION);

    }//GEN-LAST:event_btnSRedCardsActionPerformed

    private void btnSYellowCardsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSYellowCardsActionPerformed
        
        // Reads information from the database. Gets the name and surname 
        // of players that have gotten yellow cards. 
        //It orders from player with the most yellow cards to the to the least.
        
        Query q = FINALPATPUEntityManager.createNativeQuery
        ("SELECT PNAME, PSURNAME, PYELLOW FROM PLAYER WHERE PYELLOW > "
                + "0 ORDER BY PYELLOW DESC"
                + "");
       
        //the name of the variable is "to display" because it is information
        //that will be displayed.
        String toDisplay = "";
        List<Object[]> objlist = q.getResultList();

        for (Object[] row : objlist) {

            
            toDisplay = 
                    toDisplay + "" + row[0] + " " + row[1] + " : " + 
                    row[2] + " yellow cards" + "\n";
            
            //testing:
            //System.out.println(row[0] + ", commonality: " + row[1]);
        }

        JTextArea textArea = new JTextArea(toDisplay);
        JScrollPane scrollPane = new JScrollPane(textArea);
        textArea.setLineWrap(true);
        textArea.setWrapStyleWord(true);
        scrollPane.setPreferredSize(new Dimension(300, 300));
        JOptionPane.showMessageDialog(this, 
                scrollPane, "Players with most yellow cards",
                JOptionPane.YES_NO_OPTION);

    }//GEN-LAST:event_btnSYellowCardsActionPerformed

    private void btnSHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSHelpActionPerformed

        // Whenever the user clicks on this help button the message 
        //with instructions and information (on the toDisplay string) 
        // will pop up and the it is JOptionPane.YES_NO_OPTION so if the user 
        //is happy with the information he/she
        // can click on "OK" when the user is done 
        
        //the name of the variable is "to display" because it is information
        //that will be displayed.
        String toDisplay = "For most buttons, there will be a message area "
                + "popping up with the information you intend to look for.\n"
                + "\n"
                + "1. If you want to look for an individual player, click the "
                + "“Search for player”\n"
                + "2. If you want to know who has or hasn’t been injured then "
                + "the second and third button are available for that.\n"
                + "3. If you want to know who has the most goals or who has "
                + "the most assists, the fourth and fifth button will "
                + "help you with that.\n"
                + "4.  If you want to know who has scored the most goals "
                + "and has never been injured, then the 6th button on the "
                + "search panel will help you with that.\n"
                + "5. If you want to know who’s had red or yellow cards, "
                + "then the seventh and eighth buttons will "
                + "help you with that.\n"
                + "6. If you want to search by position "
                + "(Goalkeeper, Defender, Midfielder and Striker)"
                + " the last button will take you to a page where you will "
                + "have the option to search any of these 4 positions.";
        
        JTextArea textArea = new JTextArea(toDisplay);
        JScrollPane scrollPane = new JScrollPane(textArea);
        textArea.setLineWrap(true);
        textArea.setWrapStyleWord(true);
        scrollPane.setPreferredSize(new Dimension(300, 300));
        JOptionPane.showMessageDialog(this, scrollPane, "Help",
                JOptionPane.YES_NO_OPTION);
        
                                }//GEN-LAST:event_btnSHelpActionPerformed

    private void btnMostCardsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostCardsActionPerformed
        
        // This will display the players who have gotten the most yellow 
        // and red cards on the team. However, it will only get the first 5 who
        // have the most red and yellow
        
        Query q = FINALPATPUEntityManager.
                createNativeQuery("SELECT PNAME, PSURNAME, PRED, PYELLOW "
                        + "FROM PLAYER WHERE PYELLOW > 0 AND PRED > 0 "
                        + "ORDER BY PYELLOW DESC FETCH FIRST 5 ROWS ONLY"
                + "");
       
        //the name of the variable is "to display" because it is information
        //that will be displayed.
        String toDisplay = "";
        List<Object[]> objlist = q.getResultList();

        for (Object[] row : objlist) {

            //notinjured.add()
            toDisplay = toDisplay + "" + row[0] + " " + row[1] + " : " + 
                    row[2] + " RED : " + row[3] + " YELLOW" + "\n";

            //System.out.println(row[0] + ", commonality: " + row[1]);
        }

        JTextArea textArea = new JTextArea(toDisplay);
        JScrollPane scrollPane = new JScrollPane(textArea);
        textArea.setLineWrap(true);
        textArea.setWrapStyleWord(true);
        scrollPane.setPreferredSize(new Dimension(300, 300));
        JOptionPane.showMessageDialog(this, 
                scrollPane, "Players with most red + yellow cards",
                JOptionPane.YES_NO_OPTION);


    }//GEN-LAST:event_btnMostCardsActionPerformed

    private void btnPlayersStatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayersStatsActionPerformed
        
        if (lstPlayers.getSelectedIndex() == -1) {
            
        //The button stats will only work when something is selected
        //that's why when it is not selected, this if statement does nothing.
        
        } else {
            
        //When something is selected though, the selected player's statistics
        // such as appearances, goals, assists, red and yellow card as well.
       
        //the name of the variable is "showinfo" because it is information
        //that will be displayed.
            String ShowInfo = "";
            Player selectedPlayer = (Player) playerList.
                    get(lstPlayers.getSelectedIndex());
            ShowInfo += "Name: " + 
                    selectedPlayer.getPname() + " " + 
                    selectedPlayer.getPsurname() + "\nAppearances: " + 
                    selectedPlayer.getPappearances() + "\nGoals: " + 
                    selectedPlayer.getPgoals() + "\nAssists: " + 
                    selectedPlayer.getPassists() + "\n" + 
                    selectedPlayer.getPred() + " Red card(s), " + 
                    selectedPlayer.getPyellow() + " Yellow card(s)";

            JTextArea textArea = new JTextArea(ShowInfo);
            JScrollPane scrollPane = new JScrollPane(textArea);
            textArea.setLineWrap(true);
            textArea.setWrapStyleWord(true);
            scrollPane.setPreferredSize(new Dimension(100, 200));
            JOptionPane.showMessageDialog(this, 
                    scrollPane, "Player's information", 
                    JOptionPane.YES_NO_OPTION);
        }
    }//GEN-LAST:event_btnPlayersStatsActionPerformed

    private void lstDefendersValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstDefendersValueChanged

            
        if (lstDefenders.getSelectedIndex() == -1) 
        {
            //setting these components to zero and disabling buttons that arent
            // needed when nothing on the list is selected
            
            spnDAppearances.setValue(0);
            spnDRed.setValue(0);
            spnDYellow.setValue(0);
            spnDGoals.setValue(0);
            spnDAssists.setValue(0);
            DisableButtons();
            cbxDinjuredthisseason.setSelected(false);
        } 
        else 
        {
            //enabling buttons that need to be enabled when an object on the 
            //list is selected
            
            EnableButtons();
            
            //the name is selected defender because it is for the defender
            // that will be selected on the list.
            
            Player selectedDefender = (Player)defenders.
                    get(lstDefenders.getSelectedIndex());
            spnDAppearances.setValue(selectedDefender.getPappearances());
            cbxDinjuredthisseason.
                    setSelected(selectedDefender.getPinjuredbefore());

            if (selectedDefender.getPinjuredbefore() == false) {
                btnDInjuryDetails.setEnabled(false);
            } else {
                btnDInjuryDetails.setEnabled(true);
            }
            spnDRed.setValue(selectedDefender.getPred());
            spnDYellow.setValue(selectedDefender.getPyellow());
            spnDGoals.setValue(selectedDefender.getPgoals());
            spnDAssists.setValue(selectedDefender.getPassists());
            //getting the values from the newly created player
        }

    }//GEN-LAST:event_lstDefendersValueChanged

    private void lstGoalkeepersValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstGoalkeepersValueChanged

        if (lstGoalkeepers.getSelectedIndex() == -1) 
        {
            //setting these components to zero and disabling buttons that arent
            // needed when nothing on the list is selected
            spnGKAppearances.setValue(0);
            spnGKRed.setValue(0);
            spnGKYellow.setValue(0);
           cbxGKinjured.setSelected(false);
            DisableButtons();
        } 
        else
        {
            EnableButtons(); //enabling the buttons that need to be enabled

            //the name is selected goalkeeper because it is for the goalkeeper
            // that will be selected on the list.
            
            Player selectedGoalkeeper = (Player) goalkeepers.get(lstGoalkeepers
                    .getSelectedIndex());

            if (selectedGoalkeeper.getPinjuredbefore() == false) {
                btnGKInjuryDetails.setEnabled(false);
            } else {
                btnGKInjuryDetails.setEnabled(true);
            }
            // sets the values of the spinners and checkboxes to the ones
            // that it needs to be set in.
            
            spnGKAppearances.setValue(selectedGoalkeeper.getPappearances());
            spnGKRed.setValue(selectedGoalkeeper.getPred());
            spnGKYellow.setValue(selectedGoalkeeper.getPyellow());
            cbxGKinjured.setSelected(selectedGoalkeeper.getPinjuredbefore());
            cbxGKupfront.setSelected(selectedGoalkeeper.getPposition().
                    getPlayupfront());
        }


    }//GEN-LAST:event_lstGoalkeepersValueChanged

    private void lstForwardsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstForwardsValueChanged
        
        if (lstForwards.getSelectedIndex() == -1) 
        {
            //setting these components to zero and disabling buttons that aren't
            // needed when nothing on the list is selected
            spnFAppearances.setValue(0);
            spnFAssists.setValue(0);
            spnFGoals.setValue(0);
            spnFRed.setValue(0);
            spnFYellow.setValue(0);
            DisableButtons();
                        cbxFinjuredthisseason.setSelected(false);

        } 
        else 
        {
            EnableButtons();
            //enabling the buttons that need to be enabled
            
            //the name is selected Forward because it is for the Forward
            // that will be selected on the list.
            Player selectedForward = (Player) forwards
                    .get(lstForwards.getSelectedIndex());
                // if the player is not injured, then the injury details button
               // will remain false. Otherwise, it will be enabled and the user
               // can use it.
            if (selectedForward.getPinjuredbefore() == false) 
                {
                btnFInjuryDetails.setEnabled(false);
                } 
            else 
                {
                btnFInjuryDetails.setEnabled(true);
                }
            
            // When the list is selected, all the defining values will be set
            spnFAppearances.setValue(selectedForward.getPappearances());
            spnFAssists.setValue(selectedForward.getPassists());
            spnFGoals.setValue(selectedForward.getPgoals());
            spnFRed.setValue(selectedForward.getPred());
            spnFYellow.setValue(selectedForward.getPyellow());
            cbxFinjuredthisseason.setSelected(selectedForward.
                    getPinjuredbefore());
        }
    }//GEN-LAST:event_lstForwardsValueChanged

    private void lstMidfieldersValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstMidfieldersValueChanged
        
        if (lstMidfielders.getSelectedIndex() == -1) 
        {
            DisableButtons();
            // before selection, all the components values are set to 0.
            spnMAppearances.setValue(0);
            spnMAssists.setValue(0);
            spnMGoals.setValue(0);
            spnMRed.setValue(0);
            spnMYellow.setValue(0);
                        cbxMInjuredThisSeason.setSelected(false);

        } 
        else
            {
            EnableButtons();
            
            //the name is selected Midfielder because it is for the Midfielder
            // that will be selected on the list.
            
            Player selectedMidfielder = (Player) midfielders.
                    get(lstMidfielders.getSelectedIndex());
            
                // if the player is not injured, then the injury details button
                // will remain false. Otherwise, it will be enabled and the user
                // can use it.
            if (selectedMidfielder.getPinjuredbefore() == false) 
            {
                
                btnMInjuryDetails.setEnabled(false);
            } 
            else 
            {
                btnMInjuryDetails.setEnabled(true);
            }
            // When the list is selected, all the defining values will be set
            spnMAppearances.setValue(selectedMidfielder.getPappearances());
            spnMAssists.setValue(selectedMidfielder.getPassists());
            spnMGoals.setValue(selectedMidfielder.getPgoals());
            spnMRed.setValue(selectedMidfielder.getPred());
            spnMYellow.setValue(selectedMidfielder.getPyellow());
            cbxMInjuredThisSeason.
                    setSelected(selectedMidfielder.getPinjuredbefore());
            }
    }//GEN-LAST:event_lstMidfieldersValueChanged

    private void btnDViewinfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDViewinfoActionPerformed
        
        // when this button is clicked, this if statement will check which
        // player was clicked. If so, the player's name, surname, nationality
        //age, weight and height will be displayed to the user.
        
        if (lstDefenders.getSelectedIndex() == -1) 
        {
        } 
        else 
        {
            String ShowInfo = "";
            Player selectedPlayer = (Player)defenders.
                    get(lstDefenders.getSelectedIndex());
            
            ShowInfo += selectedPlayer
                    .getPname() + " " + selectedPlayer.
                            getPsurname() + "\nNationality: " + selectedPlayer.
                                    getPnationality() + "\nAge: " + 
                    selectedPlayer.getPage() + "\nWeight: " + 
                    selectedPlayer.getPweight() + " kgs \nHeight: " + 
                    selectedPlayer.getPheight() + " cm";

            JTextArea textArea = new JTextArea(ShowInfo);
            JScrollPane scrollPane = new JScrollPane(textArea);
            textArea.setLineWrap(true);
            textArea.setWrapStyleWord(true);
            scrollPane.setPreferredSize(new Dimension(100, 100));
            JOptionPane
                    .showMessageDialog(this, scrollPane, "Player's information", 
                            JOptionPane.YES_NO_OPTION);
        }
    }//GEN-LAST:event_btnDViewinfoActionPerformed

    private void btnGKviewinfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGKviewinfoActionPerformed
       
        // when this button is clicked, this if statement will check which
        // player was clicked. If so, the player's name, surname, nationality
        //age, weight and height will be displayed to the user.
        
        if (lstGoalkeepers.getSelectedIndex() == -1) 
        {
        } 
        else 
        {
            String ShowInfo = "";
            Player selectedPlayer = 
                    (Player)goalkeepers.get(lstGoalkeepers.getSelectedIndex());
            ShowInfo += 
                    selectedPlayer.getPname() + " " + 
                    selectedPlayer.getPsurname() + "\nNationality: " + 
                    selectedPlayer.getPnationality() + "\nAge: " + 
                    selectedPlayer.getPage() + "\nWeight: " + 
                    selectedPlayer.getPweight() + " kgs \nHeight: " + 
                    selectedPlayer.getPheight() + " cm";

            JTextArea textArea = new JTextArea(ShowInfo);
            JScrollPane scrollPane = new JScrollPane(textArea);
            textArea.setLineWrap(true);
            textArea.setWrapStyleWord(true);
            scrollPane.setPreferredSize(new Dimension(100, 100));
            JOptionPane.
                    showMessageDialog(this, scrollPane, "Player's information", 
                            JOptionPane.YES_NO_OPTION);
        }
    }//GEN-LAST:event_btnGKviewinfoActionPerformed

    private void btnFviewinfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFviewinfoActionPerformed
        
        // when this button is clicked, this if statement will check which
        // player was clicked. If so, the player's name, surname, nationality
        //age, weight and height will be displayed to the user.
        
        if (lstForwards.getSelectedIndex() == -1)
        {
        } 
        else 
        {
            String ShowInfo = "";
            Player selectedPlayer = 
                    (Player)forwards.get(lstForwards.getSelectedIndex());
            ShowInfo += 
                    selectedPlayer.getPname() + " " + 
                    selectedPlayer.getPsurname() + "\nNationality: " + 
                    selectedPlayer.getPnationality() + "\nAge: " + 
                    selectedPlayer.getPage() + "\nWeight: " + 
                    selectedPlayer.getPweight() + " kgs \nHeight: " + 
                    selectedPlayer.getPheight() + " cm";

            JTextArea textArea = new JTextArea(ShowInfo);
            JScrollPane scrollPane = new JScrollPane(textArea);
            textArea.setLineWrap(true);
            textArea.setWrapStyleWord(true);
            scrollPane.setPreferredSize(new Dimension(100, 100));
            JOptionPane.
                    showMessageDialog(this, scrollPane, "Player's information", 
                            JOptionPane.YES_NO_OPTION);
        }
    }//GEN-LAST:event_btnFviewinfoActionPerformed

    private void btnMviewinfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMviewinfoActionPerformed
       
         // when this button is clicked, this if statement will check which
        // player was clicked. If so, the player's name, surname, nationality
        //age, weight and height will be displayed to the user.
        
        if (lstMidfielders.getSelectedIndex() == -1) {

        } else {
            String ShowInfo = "";
            Player selectedPlayer = 
                    (Player)midfielders.get(lstMidfielders.getSelectedIndex());
            ShowInfo += 
                    selectedPlayer.getPname() + " " + 
                    selectedPlayer.getPsurname() + "\nNationality: " + 
                    selectedPlayer.getPnationality() + "\nAge: " + 
                    selectedPlayer.getPage() + "\nWeight: " + 
                    selectedPlayer.getPweight() + " kgs \nHeight: " + 
                    selectedPlayer.getPheight() + " cm";

            JTextArea textArea = new JTextArea(ShowInfo);
            JScrollPane scrollPane = new JScrollPane(textArea);
            textArea.setLineWrap(true);
            textArea.setWrapStyleWord(true);
            scrollPane.setPreferredSize(new Dimension(100, 100));
            JOptionPane.showMessageDialog(this, 
                    scrollPane, "Player's information", 
                    JOptionPane.YES_NO_OPTION);
        }
    }//GEN-LAST:event_btnMviewinfoActionPerformed

    private void lstPlayersValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstPlayersValueChanged
       
        // On the players panel, this if-statement will check if the player
        // is selected or not. If the player is selected, then the "view stats"
        // button will be enabled. If not, then the button will de disabled
        
        if (lstPlayers.getSelectedIndex() == -1)
        {
            btnPlayersStats.setEnabled(false);
            spnHeight.setValue(0);
            spnWeight.setValue(0);
            cbxInjuredBefore.setSelected(false);
        }
        else 
        {
            btnPlayersStats.setEnabled(true);
        }
        
    }//GEN-LAST:event_lstPlayersValueChanged

    private void btnDInjuryDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDInjuryDetailsActionPerformed
        
        // this button will only be enabled if an injured player has been 
        //selected. If so, the details of the injury will be displayed.
        
        if (lstDefenders.getSelectedIndex() == -1) 
        {

        } 
        else
        {
            Player selectedDefender = 
                    (Player) defenders.get(lstDefenders.getSelectedIndex());
            String toDisplay = 
                    selectedDefender.getPname() + " " + 
                    selectedDefender.getPsurname() + "\nName of injury: " + 
                    selectedDefender.getInjury().getIname() 
                    + "\nExtremity of injury: " + 
                    selectedDefender.getInjury().getExtremity() + 
                    "/5\nDays it took to recover: " + 
                    selectedDefender.getInjury().getRecoverydays();

            JTextArea textArea = new JTextArea(toDisplay);
            JScrollPane scrollPane = new JScrollPane(textArea);
            textArea.setLineWrap(true);
            textArea.setWrapStyleWord(true);
            scrollPane.setPreferredSize(new Dimension(250, 200));
            JOptionPane.showMessageDialog(this, scrollPane, "Injury details", 
                    JOptionPane.YES_NO_OPTION);
        }
    }//GEN-LAST:event_btnDInjuryDetailsActionPerformed

    private void btnGKInjuryDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGKInjuryDetailsActionPerformed
       
        // this button will only be enabled if an injured player has been 
        //selected. If so, the details of the injury will be displayed.
        
        if (lstGoalkeepers.getSelectedIndex() == -1) 
        {

        } 
        else 
        {
            Player selectedPlayer = 
                    (Player)goalkeepers.get(lstGoalkeepers.getSelectedIndex());
            String toDisplay = selectedPlayer.getPname() + " " + 
                    selectedPlayer.getPsurname() + "\nName of injury: " + 
                    selectedPlayer.getInjury().getIname() + 
                    "\nExtremity of injury: " + 
                    selectedPlayer.getInjury().getExtremity() + 
                    "/5\nDays it took to recover: " + 
                    selectedPlayer.getInjury().getRecoverydays();

            JTextArea textArea = new JTextArea(toDisplay);
            JScrollPane scrollPane = new JScrollPane(textArea);
            textArea.setLineWrap(true);
            textArea.setWrapStyleWord(true);
            scrollPane.setPreferredSize(new Dimension(250, 200));
            JOptionPane.showMessageDialog(this, scrollPane, "Injury details", 
                    JOptionPane.YES_NO_OPTION);
        }
    }//GEN-LAST:event_btnGKInjuryDetailsActionPerformed

    private void btnMInjuryDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMInjuryDetailsActionPerformed
        
        // this button will only be enabled if an injured player has been 
        //selected. If so, the details of the injury will be displayed.
        
        if (lstMidfielders.getSelectedIndex() == -1) 
        {

        } 
        else 
        {
            Player selectedPlayer = 
                    (Player)midfielders.get(lstMidfielders.getSelectedIndex());
            String toDisplay = 
                    selectedPlayer.getPname() + " " + 
                    selectedPlayer.getPsurname() + "\nName of injury: " + 
                    selectedPlayer.getInjury().getIname() + 
                    "\nExtremity of injury: " + 
                    selectedPlayer.getInjury().getExtremity() + 
                    "/5\nDays it took to recover: " + 
                    selectedPlayer.getInjury().getRecoverydays();

            JTextArea textArea = new JTextArea(toDisplay);
            JScrollPane scrollPane = new JScrollPane(textArea);
            textArea.setLineWrap(true);
            textArea.setWrapStyleWord(true);
            scrollPane.setPreferredSize(new Dimension(250, 200));
            JOptionPane.showMessageDialog(this, scrollPane, "Injury details", 
                    JOptionPane.YES_NO_OPTION);
        }
    }//GEN-LAST:event_btnMInjuryDetailsActionPerformed

    private void btnFInjuryDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFInjuryDetailsActionPerformed
       
        // this button will only be enabled if an injured player has been 
        //selected. If so, the details of the injury will be displayed.
        
        if (lstForwards.getSelectedIndex() == -1) 
        {

        } 
        else 
        {
            Player selectedPlayer = 
                    (Player)forwards.get(lstForwards.getSelectedIndex());
            String toDisplay = 
                    selectedPlayer.getPname() + " " + 
                    selectedPlayer.getPsurname() + "\nName of injury: " + 
                    selectedPlayer.getInjury().getIname() + 
                    "\nExtremity of injury: " + 
                    selectedPlayer.getInjury().getExtremity() + 
                    "/5\nDays it took to recover: " + 
                    selectedPlayer.getInjury().getRecoverydays();

            JTextArea textArea = new JTextArea(toDisplay);
            JScrollPane scrollPane = new JScrollPane(textArea);
            textArea.setLineWrap(true);
            textArea.setWrapStyleWord(true);
            scrollPane.setPreferredSize(new Dimension(250, 200));
            JOptionPane.showMessageDialog(this, 
                    scrollPane, "Injury details", JOptionPane.YES_NO_OPTION);
        }         
        
    }//GEN-LAST:event_btnFInjuryDetailsActionPerformed

    private void btnMMGotoplayersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMMGotoplayersActionPerformed
        swopPanel(pnlPlayers);
        // takes the user from the main menu to the players panel
    }//GEN-LAST:event_btnMMGotoplayersActionPerformed

    
    public void LoadintoGoalkeepers() 
    {
        //loads the goalkeepers onto the goalkeepers list 
        
        for (int i = 0; i < playerList.size(); i++) 
        {
            newplayer = playerList.get(i);
            if (newplayer.getPposition().
                    getPositioncategory().equals("Goalkeeper")) 
            {
                goalkeepers.add(newplayer);
            }

        }

        lstGoalkeepers.setListData(goalkeepers);
        lstGoalkeepers.updateUI();
        lstGoalkeepers.clearSelection();
    }

    public void LoadintoDefenders()
    {
        //loads the defenders onto the defenders list
        for (int i = 0; i < playerList.size(); i++) {
            newplayer = playerList.get(i);
            if (newplayer.getPposition().
                    getPositioncategory().equals("Defender")) {
                defenders.add(newplayer);
            }

        }

        lstDefenders.setListData(defenders);
        lstDefenders.updateUI();
        lstDefenders.clearSelection();
    }

    public void LoadintoMidfielders() 
    {
        //takes nothing in and
        //loads the midfielders onto the midfielders list
        
        for (int i = 0; i < playerList.size(); i++)
        {
            newplayer = playerList.get(i);
            if (newplayer.getPposition().
                    getPositioncategory().equals("Midfielder")) {
                midfielders.add(newplayer);
            }

        }

        lstMidfielders.setListData(midfielders);
        lstMidfielders.updateUI();
        lstMidfielders.clearSelection();
    }

    public void DisableButtons() 
    {
        //Disables buttons that do not need to be enabled.
        //Or buttons that inittially need to be disabled. That will later be 
        //enabled.
        
        btnPlayersStats.setEnabled(false);
        spnHeight.setEnabled(false);
        spnWeight.setEnabled(false);
        cbPosition.setEnabled(false);
        cbxInjuredBefore.setEnabled(false);
        cbInjury.setEnabled(false);
        btnDViewinfo.setEnabled(false);
        btnGKviewinfo.setEnabled(false);
        btnFviewinfo.setEnabled(false);
        btnMviewinfo.setEnabled(false);
        btnDInjuryDetails.setEnabled(false);
        btnGKInjuryDetails.setEnabled(false);
        btnMInjuryDetails.setEnabled(false);
        btnFInjuryDetails.setEnabled(false);
         spnGKRed.setEnabled(false);
            spnGKAppearances.setEnabled(false);
            spnGKYellow.setEnabled(false);
            cbxGKinjured.setEnabled(false);
            cbxGKupfront.setEnabled(false);
            
             spnDAppearances.setEnabled(false);
            spnDAssists.setEnabled(false);
            spnDGoals.setEnabled(false);
            spnDRed.setEnabled(false);
            spnDYellow.setEnabled(false);
             cbxDinjuredthisseason.setEnabled(false);
             
              spnMAppearances.setEnabled(false);
            spnMAssists.setEnabled(false);
            spnMGoals.setEnabled(false);
            spnMRed.setEnabled(false);
            spnMYellow.setEnabled(false);
             cbxMInjuredThisSeason.setEnabled(false);
             
             spnFAppearances.setEnabled(false);
            spnFAssists.setEnabled(false);
            spnFGoals.setEnabled(false);
            spnFRed.setEnabled(false);
            spnFYellow.setEnabled(false);
             cbxFinjuredthisseason.setEnabled(false);
    }

    public void EnableButtons() 
    {
        //Enables the buttons that need to be enabled throughout the program.
        
        btnPlayersStats.setEnabled(true);
        btnDViewinfo.setEnabled(true);
        btnGKviewinfo.setEnabled(true);
        btnFviewinfo.setEnabled(true);
        btnMviewinfo.setEnabled(true);
    }

    public void LoadintoForwards() 
    {
        //takes nothing in and
        //loads the forwards onto the forwards list
        
        for (int i = 0; i < playerList.size(); i++) 
        {
            newplayer = playerList.get(i);
            if (newplayer.getPposition().
                    getPositioncategory().equals("Forward"))
            {
                forwards.add(newplayer);
            }

        }

        lstForwards.setListData(forwards);
        lstForwards.updateUI();
        lstForwards.clearSelection();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PAT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PAT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PAT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PAT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PAT().setVisible(true);
            }
        });
    }

    private void swopPanel(JPanel panel) 
    {
        //input: takes a panel in
        //output: takes user to the panel inputted and the current panel dissa
        //pears.
        
        getContentPane().setVisible(false);
        setContentPane(panel);
        getContentPane().setVisible(true);
    }

    private void cancel() 
    {
        //closes/cancels the program.
        System.exit(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager FINALPATPUEntityManager;
    private javax.swing.JButton btnDInjuryDetails;
    private javax.swing.JButton btnDViewinfo;
    private javax.swing.JButton btnDcancel;
    private javax.swing.JButton btnDgoMM;
    private javax.swing.JButton btnDseeotherpos;
    private javax.swing.JButton btnFInjuryDetails;
    private javax.swing.JButton btnFcancel;
    private javax.swing.JButton btnFgoMM;
    private javax.swing.JButton btnFseepos;
    private javax.swing.JButton btnFviewinfo;
    private javax.swing.JButton btnGKInjuryDetails;
    private javax.swing.JButton btnGKcancel;
    private javax.swing.JButton btnGKgoMM;
    private javax.swing.JButton btnGKseepos;
    private javax.swing.JButton btnGKviewinfo;
    private javax.swing.JButton btnMInjuryDetails;
    private javax.swing.JButton btnMMCancel;
    private javax.swing.JButton btnMMGoSearch;
    private javax.swing.JButton btnMMGotoplayers;
    private javax.swing.JButton btnMMhelp;
    private javax.swing.JButton btnMcancel;
    private javax.swing.JButton btnMgoMM;
    private javax.swing.JButton btnMostCards;
    private javax.swing.JButton btnMseepos;
    private javax.swing.JButton btnMviewinfo;
    private javax.swing.JButton btnPCancel;
    private javax.swing.JButton btnPdefenders;
    private javax.swing.JButton btnPforwards;
    private javax.swing.JButton btnPgoalkeepers;
    private javax.swing.JButton btnPgotoMainMenu;
    private javax.swing.JButton btnPgotoSearch;
    private javax.swing.JButton btnPlGoMM;
    private javax.swing.JButton btnPlHelp;
    private javax.swing.JButton btnPlayersStats;
    private javax.swing.JButton btnPlcancel;
    private javax.swing.JButton btnPmidfielders;
    private javax.swing.JButton btnSCancel;
    private javax.swing.JButton btnSGoMainMenu;
    private javax.swing.JButton btnSGoalsNoinjury;
    private javax.swing.JButton btnSHelp;
    private javax.swing.JButton btnSInjury;
    private javax.swing.JButton btnSMostAssists;
    private javax.swing.JButton btnSMostGoals;
    private javax.swing.JButton btnSNoInjury;
    private javax.swing.JButton btnSRedCards;
    private javax.swing.JButton btnSYellowCards;
    private javax.swing.JButton btnSbyPosition;
    private javax.swing.JComboBox<String> cbInjury;
    private javax.swing.JComboBox<String> cbPosition;
    private javax.swing.JCheckBox cbxDinjuredthisseason;
    private javax.swing.JCheckBox cbxFinjuredthisseason;
    private javax.swing.JCheckBox cbxGKinjured;
    private javax.swing.JCheckBox cbxGKupfront;
    private javax.swing.JCheckBox cbxInjuredBefore;
    private javax.swing.JCheckBox cbxMInjuredThisSeason;
    private java.util.List<finalpat.Injury> injuryList;
    private javax.persistence.Query injuryQuery;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JLabel lblInjury;
    private javax.swing.JLabel lblPlayersdetails;
    private javax.swing.JLabel lblPlayersonteam;
    private javax.swing.JLabel lblPos;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JList<Player> lstDefenders;
    private javax.swing.JList<Player> lstForwards;
    private javax.swing.JList<Player> lstGoalkeepers;
    private javax.swing.JList<Player> lstMidfielders;
    private javax.swing.JList<String> lstPlayers;
    private java.util.List<finalpat.Player> playerList;
    private javax.persistence.Query playerQuery;
    private javax.swing.JPanel pnlDefenders;
    private javax.swing.JPanel pnlForwards;
    private javax.swing.JPanel pnlGoalkeepers;
    private javax.swing.JPanel pnlMenu;
    private javax.swing.JPanel pnlMidfielders;
    private javax.swing.JPanel pnlPlayers;
    private javax.swing.JPanel pnlSearch;
    private javax.swing.JPanel pnlbyPos;
    private java.util.List<finalpat.Pposition> ppositionList;
    private javax.persistence.Query ppositionQuery;
    private javax.swing.JSpinner spnDAppearances;
    private javax.swing.JSpinner spnDAssists;
    private javax.swing.JSpinner spnDGoals;
    private javax.swing.JSpinner spnDRed;
    private javax.swing.JSpinner spnDYellow;
    private javax.swing.JSpinner spnFAppearances;
    private javax.swing.JSpinner spnFAssists;
    private javax.swing.JSpinner spnFGoals;
    private javax.swing.JSpinner spnFRed;
    private javax.swing.JSpinner spnFYellow;
    private javax.swing.JSpinner spnGKAppearances;
    private javax.swing.JSpinner spnGKRed;
    private javax.swing.JSpinner spnGKYellow;
    private javax.swing.JSpinner spnHeight;
    private javax.swing.JSpinner spnMAppearances;
    private javax.swing.JSpinner spnMAssists;
    private javax.swing.JSpinner spnMGoals;
    private javax.swing.JSpinner spnMRed;
    private javax.swing.JSpinner spnMYellow;
    private javax.swing.JSpinner spnWeight;
    private javax.swing.JTabbedPane tbpMain;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    
    //private vectors for players to be categorized in their positions.
    
    private Vector notinjured = new Vector();
    private Vector defenders = new Vector();
    private Vector goalkeepers = new Vector();
    private Vector forwards = new Vector();
    private Vector midfielders = new Vector();
    Player newplayer = new Player();

}
